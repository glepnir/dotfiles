#!/usr/bin/env bash

dotfiles_dir="$HOME/.dotfiles"
fonts_dir="$dotfiles_dir/fonts"

echo "config sysmtem"
sudo pacman -S zsh
chsh -s $(which zsh)

echo "conig sway"
if [ ! -d "$HOME/.config" ]; then
  rm -rf "$HOME/.config"
fi
ln -s ~/.dotfiles/config "$HOME/.config"

if [ ! -f "$HOME/.bashrc" ]; then
  rm -rf "$HOME/.bashrc"
  rm -rf "$HOME/.bash_profile"
  rm -rf "$HOME/.bash_history"
fi

sudo pacman -S git base-devel

echo "copy font..."
# Set source and target directories
fonts_dir=$( cd "$( dirname "$0" )" && pwd )
find_command="find \"$fonts_dir\" \( -name '*.[o,t]tf' -or -name '*.pcf.gz' \) -type f -print0"
mkdir $HOME/.local/share/fonts
# Copy all fonts to user fonts directory
echo "Copying fonts..."
eval $find_command | xargs -0 -I % cp "%"  $HOME/.local/share/fonts
# Reset font cache on Linux
if command -v fc-cache @>/dev/null ; then
    echo "Resetting font cache, this may take a moment..."
    fc-cache -f $font_dir
fi
echo "font install done"

echo "link config file"
shopt -s dotglob
for file in "$dotfiles_dir/link"/*; do
  if [ -f "$file" ]; then
    filename=$(basename "$file")
    ln -s "$file" "$HOME/$filename"
    echo "Created symlink: $HOME/$filename -> $file"
  fi
done
shopt -u dotglob
echo "link done"

echo "link config file"
# Ensure the target directory exists
mkdir -p $HOME/.config
rm -rf $HOME/.config/kitty
rm -rf $HOME/.config/hypr


# Loop through all folders in ~/.dotfiles/config
for folder in "$dotfiles_dir"/config/*; do
  if [ -d "$folder" ]; then
    folder_name="$(basename "$folder")"
    symlink=$HOME/.config/$folder_name

    # Check if the symlink already exists
    if [ -e "$symlink" ]; then
      echo "Symlink already exists for $folder_name"
    else
      # Create the symlink
      ln -s "$folder" "$symlink"
      echo "Created symlink for $folder_name"
    fi
  fi
done
echo "Symbolic links created from $dotfiles_dir to $target_dir"

git config --global user.name "glepnir"
git config --global user.email "glephunter@gmail.com"
git config --global core.editor "nvim"
git config --global credential.helper store

echo "download neovim config"
git clone https://github.com/glepnir/nvim "$HOME"/.config/nvim
echo "done"

echo "running update aur and install package"
yay -Syu
yay -S - < "$dotfiles_dir"/pkglist.txt --noconfirm

git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm

echo "install tsserver"
npm i -g typescript typescript-language-server
