if &compatible
  set nocompatible
endif

let $VIMPATH = fnamemodify(resolve(expand('<sfile>:p')), ':h:h')
let $VARPATH = expand(($XDG_CACHE_HOME ? $XDG_CACHE_HOME : '~/.cache').'/vim')
let s:user_settings_path = expand('$VIMPATH/core/local/local_settings.vim')

" Constants
let s:is_sudo = $SUDO_USER !=# '' && $USER !=# $SUDO_USER

function! s:source_file(path, ...) abort
  let use_global = get(a:000, 0, !has('vim_starting'))
  let abspath = resolve(expand($VIMPATH.'/core/' . a:path))
  if !use_global
    execute 'source' fnameescape(abspath)
    return
  endif

  " substitute all 'set' to 'setglobal'
  let content = map(readfile(abspath),
        \ 'substitute(v:val, "^\\W*\\zsset\\ze\\W", "setglobal", "")')
  " create tempfile and source the tempfile
  let tempfile = tempname()
  try
    call writefile(content, tempfile)
    execute 'source' fnameescape(tempfile)
  finally
    if filereadable(tempfile)
      call delete(tempfile)
    endif
  endtry
endfunction

augroup MyAutoCmd
	autocmd!
	autocmd CursorHold *? syntax sync minlines=300
augroup END

if has('vim_starting')
  call s:source_file('init.vim')
endif

call s:source_file('deinrc.vim')
call s:source_file('plugins/allkey.vim')

syntax enable
filetype plugin indent on

call dein#call_hook('source')
call dein#call_hook('post_source')

" Loading configuration modules
call s:source_file('general.vim')
call s:source_file('filetype.vim')
call s:source_file('mappings.vim')
call s:source_file('/themes/theme.vim')
"---------------------------------------------------------------------------
if s:is_sudo
	set noswapfile
	set nobackup
	set nowritebackup
	set noundofile
	if has('nvim')
		set shada="NONE"
	else
		set viminfo="NONE"
	endif
endif


function! s:check_custom_settings(filename)abort
       let  content = readfile(a:filename)
       if empty(content)
           return 0
       endif
       return 1
endfunction

" Load user custom local settings
if filereadable(s:user_settings_path)
	if s:check_custom_settings(s:user_settings_path)
		call s:source_file('/local/local_settings.vim')
	endif
endif

set secure

" vim: foldmethod=marker
" vim: set ts=2 sw=2 tw=80 noet :
