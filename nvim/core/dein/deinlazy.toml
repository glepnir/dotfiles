[[plugins]]
repo = 'ryanoasis/vim-devicons'
hook_add='''
let g:webdevicons_enable_denite = 1
'''

[[plugins]]
repo = 't9md/vim-choosewin'
on_map= {n='<Plug>'}

[[plugins]]
repo = 'ludovicchabant/vim-gutentags'
if = "executable('ctags')"
on_path = ".*"
hook_add = '''
let g:gutentags_cache_dir = $VARPATH.'/tags'
let g:gutentags_generate_on_write = 1
let g:gutentags_generate_on_missing = 0
let g:gutentags_generate_on_new = 0
let g:gutentags_ctags_exclude_wildignore = 1
let g:gutentags_ctags_exclude = [
  \ '*/wp-admin', '*/wp-content', '*/wp-includes',
  \ '*/application/vendor', '*/vendor/ckeditor', '*/media/vendor'
  \ ]
'''
[[plugins]]
repo = 'junegunn/goyo.vim'
on_cmd = 'Goyo'
hook_source ='source ~/.config/nvim/core/plugins/goyo.vim'

[[plugins]]
repo = 'junegunn/Limelight.vim'
on_cmd = 'Limelight'


[[plugins]]
repo = 'mhinz/vim-startify'
on_cmd = 'Startify'
depends = 'vim-devicons'
hook_source ='source ~/.config/nvim/core/plugins/startify.vim'
hook_post_source = '''
function! StartifyEntryFormat()
    return 'WebDevIconsGetFileTypeSymbol(absolute_path) ." ". entry_path'
endfunction
'''

[[plugins]]
repo = 'junegunn/fzf'
build = './install --all'
merged = '0'

[[plugins]]
repo = 'junegunn/fzf.vim'
depends = 'fzf'
on_cmd =['Colors','Rg','Buffers']
hook_add = 'source ~/.config/nvim/core/plugins/fzf.vim'

[[plugins]]
repo = 'tpope/vim-fugitive'
on_path ='.*'

[[plugins]]
repo = 'mg979/vim-visual-multi'
on_map = {n='<C-n>'}
hook_add = '''
let g:VM_leader = '<Space>'
'''

[[plugins]]
repo = 'honza/dockerfile.vim'
on_ft = 'Dockerfile'

[[plugins]]
repo = 'junegunn/vim-easy-align'
on_ft =['vim','json','go','html','js','jsx','py','css','less','tmpl','toml','xml','sql','Dockerfile']

[[plugins]]
repo = 'chemzqm/vim-easygit'
on_cmd = ['Gcd', 'Glcd', 'Gcommit', 'Gblame', 'Gstatus', 'Gdiff', 'Gbrowse', 'Gstatus', 'Gpush']
hook_source = 'let g:easygit_enable_command = 1'

[[plugins]]
repo = 'chemzqm/denite-git'
on_source = 'denite.nvim'


[[plugins]]
repo = 'chemzqm/todoapp.vim'
on_cmd = ['TodoAdd','TodoImport']
on_source = ['denite.nvim']

[[plugins]]
repo='tyru/caw.vim'
on_map = {nx='<Plug>'}

[[plugins]]
repo = 'sbdchd/neoformat'
on_cmd = ['Neoformat','Neoformat!']
hook_add = 'source ~/.config/nvim/core/plugins/neoformat.vim'

[[plugins]]
repo = 'yuttie/comfortable-motion.vim'
on_func ='comfortable_motion#flick'
hook_add = '''
let g:comfortable_motion_no_default_key_mappings = 1
let g:comfortable_motion_impulse_multiplier = 1
'''

[[plugins]]
repo = 'rizzatti/dash.vim'
on_map = { n ='<Plug>'}
hook_add = '''
  let g:dash_map = {
  \ 'javascript': ['javascript', 'NodeJS'],
  \ 'javascript.jsx': ['react'],
  \ 'html': ['html', 'svg'],
  \ 'go' : 'Go',
  \}
'''
[[plugins]]
repo = 'thinca/vim-quickrun'
on_cmd = ['QuickRun']
hook_add = '''
    let g:quickrun_config = {
    \   "_" : {
    \       "outputter" : "message",
    \   },
    \}
    let g:quickrun_no_default_key_mappings = 1
'''

[[plugins]]
repo = 'tpope/vim-markdown'
on_ft = 'markdown'
hook_add = '''
let g:markdown_fenced_languages = [
      \ 'html',
      \ 'bash=sh',
      \ 'css',
      \ 'javascript',
      \ 'js=javascript',
      \ 'go',
      \]
'''

[[plugins]]
repo = 'junegunn/vim-emoji'
on_ft =['markdown','vim']

[[plugins]]
repo = 'simnalamburt/vim-mundo'
on_map = { n = '<Plug>'}

[[plugins]]
repo = 'kana/vim-textobj-user'
on_func = 'textobj#user#'

[[plugins]]
repo = 'bps/vim-textobj-python'
depends = 'vim-textobj-user'
on_map = { ox ='<Plug>'}


[[plugins]]
repo ='terryma/vim-expand-region'
on_map = { x = '<Plug>'}

[[plugins]]
repo = 'tpope/vim-surround'
depends = ['vim-repeat']
on_map = ['cs','ys']

[[plugins]]
repo = 'tpope/vim-repeat'
on_map = '.'

[[plugins]]
repo = 'Yggdroot/indentLine'
on_ft = ['python','html','css','vim','javascript','jsx','javascript.jsx','vue']
hook_add = 'source ~/.config/nvim/core/plugins/indentline.vim'

[[plugins]]
repo = 'liuchengxu/vim-which-key'
on_cmd = ['WhichKey', 'WhichKey!']
hook_add = 'source ~/.config/nvim/core/plugins/whichkey.vim'
hook_post_source = '''
    call which_key#register('<Space>', 'g:which_key_map')
    call which_key#register(';', 'g:which_key_localmap')
    call which_key#register('[', 'g:which_key_rsbgmap')
    call which_key#register('[', 'g:which_key_lsbgmap')
'''

[[plugins]]
repo = 'easymotion/vim-easymotion'
on_map = {n ='<Plug>'}
hook_source = '''
    let g:EasyMotion_do_mapping = 0
    let g:EasyMotion_prompt = 'Jump to â†’ '
    let g:EasyMotion_keys = 'fjdkswbeoavn'
    let g:EasyMotion_smartcase = 1
    let g:EasyMotion_use_smartsign_us = 1
'''

[[plugins]]
repo = 'Shougo/defx.nvim'
on_cmd = 'Defx'
hook_source = 'source ~/.config/nvim/core/plugins/defx.vim'

[[plugins]]
repo = 'kristijanhusak/defx-git'
on_source='defx.nvim'
hook_source = 'source ~/.config/nvim/core/plugins/defx-git.vim'

[[plugins]]
repo = 'kristijanhusak/defx-icons'
on_source = 'defx.nvim'

[[plugins]]
repo = 'airblade/vim-gitgutter'
#on_path = ".*"
hook_source='''
source ~/.config/nvim/core/plugins/vim-gitgutter.vim
'''

[[plugins]]
repo = 'liuchengxu/vista.vim'
on_cmd =['Vista','Vista!','Vista!!']
hook_source='''
source ~/.config/nvim/core/plugins/vista.vim
'''

[[plugins]]
repo = 'majutsushi/tagbar'
on_cmd = ['TagbarToggle']
hook_source ='source ~/.config/nvim/core/plugins/tagbar.vim'

[[plugins]]
repo = 'mattn/emmet-vim'
on_ft = ['html','css','jsx','javascript','javascript.jsx']
on_event = 'InsertEnter'
hook_add ='''
    let g:use_emmet_complete_tag = 0
    let g:user_emmet_install_global = 0
    let g:user_emmet_install_command = 0
    let g:user_emmet_mode = 'i'
    let g:user_emmet_leader_key='<C-g>'
    let g:user_emmet_settings = {
        \  'javascript.jsx' : {
        \      'extends' : 'jsx',
        \  },
    \}
'''
[[plugins]]
repo = 'luochen1990/rainbow'
on_ft = ['python','javascript','jsx','javascript.jsx','html','css','go','vim','toml']
hook_source = 'let g:rainbow_active = 1'

[[plugins]]
repo = 'Shougo/denite.nvim'
on_cmd = 'Denite'
depends='vim-devicons'
hook_source = '''
source ~/.config/nvim/core/plugins/denite.vim
source ~/.config/nvim/core/plugins/denite_menu.vim
'''

[[plugins]]
repo = 'Shougo/echodoc.vim'
on_event='CompleteDone'
hook_source = '''
call echodoc#enable()
let g:echodoc#type = "virtual"
'''

[[plugins]]
repo = 'w0rp/ale'
hook_add = 'source ~/.config/nvim/core/plugins/vim-ale.vim'

[[plugins]]
repo = 'othree/html5.vim'
on_ft = ['html', 'javascript.jsx','vue','javascript']

[[plugins]]
repo = 'neoclide/vim-jsx-improve'
on_ft = ['javascript','jsx','javascript.jsx']

[[plugins]]
repo = 'fatih/vim-go'
on_ft = ['go']
hook_source = 'source ~/.config/nvim/core/plugins/vim-go.vim'

[[plugins]]
repo = 'AndrewRadev/splitjoin.vim'
on_cmd = ['SplitjoinJoin','SplitjoinSplit']

[[plugins]]
repo = 'elzr/vim-json'
on_ft = ['json']
hook_add = 'let g:vim_json_syntax_conceal = 0 '

[[plugins]]
repo = 'cespare/vim-toml'
on_ft= ['toml']

[[plugins]]
repo = 'vim-scripts/xml.vim'
on_ft = ['xml']

#[[plugins]]
#repo = 'scrooloose/nerdtree'
#on_map = { n ='<Plug>'}
#depends = ['vim-devicons','vim-nerdtree-syntax-highlight']
#hook_source = 'source ~/.config/nvim/core/plugins/nerdtree.vim'

#[[plugins]]
#repo = 'tiagofumo/vim-nerdtree-syntax-highlight'
#hook_add = '''
    #let g:NERDTreeSyntaxDisableDefaultExtensions = 1
    #let g:NERDTreeDisableExactMatchHighlight = 1
    #let g:NERDTreeDisablePatternMatchHighlight = 1
    #let g:NERDTreeSyntaxEnabledExtensions = ['go', 'py', 'html', 'css', 'jsx', 'js', 'vim','json','md']
#'''

#[[plugins]]
#repo = 'pangloss/vim-javascript'
#on_ft = ['javascript', 'javascript.jsx']

#[[plugins]]
#repo = 'maxmellon/vim-jsx-pretty'
#on_ft = ['javascript', 'javascript.jsx']
#hook_add = '''
#let g:vim_jsx_pretty_enable_jsx_highlight = 0
#let g:vim_jsx_pretty_colorful_config = 1
#'''

#[[plugins]]
#repo = 'mxw/vim-jsx'
#on_ft = ['javascript', 'javascript.jsx']


#[[plugins]]
#repo = 'hail2u/vim-css3-syntax'
#on_ft = ['css']

#[[plugins]]
#repo = 'rhysd/git-messenger.vim'
#on_cmd = 'GitMessenger'
#on_map = {n = '<Plug>(git-messenger'}
